#+DATE: 24 July 2021

#+TITLE: Lambda Expressions

Previous: [[file:clbe-21.org][21. Symbols & Variables]]

Next: [[file:clbe-23.org][23. Further Reading]]

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

As noted earlier, there are four types of compound forms evaluated by
Lisp: special forms, macro forms, function forms and lambda forms. A
lambda form is similar to a function form, except the function name is
replaced by a lambda expression. As an example, the below two are
equivalent. Lambda expressions can be used to utilise unnamed
functions.

#+begin_src lisp

  ;; Function Form

  (defun my-function (x)
    (+ x 100))

  ;; Returns 101

  (my-function 1)

  ;; Lambda Form
  ;; Also returns 101
  
  ((lambda (x)
     (+ x 100))
   1)

#+end_src

More specifically, a lambda expression is a list which can be used in
place of a function name in certain contexts to denote a function by
directly describing its behavior rather than indirectly by referring
to the name of an established function. Its name derives from the fact
that its first element is the symbol LAMBDA. The second element of a
lambda expression must be an argument list and its remaining elements
constitute the body of the function.

In a slightly confusing manner, LAMBDA is also a Common Lisp
macro. Depending on context, LAMBDA can refer either to the symbol
LAMBDA or the macro LAMBDA. LAMBDA will be evaluated as a macro when
it is the first element of a macro form. LAMBDA will be treated as a
symbol when it is used as part of a lambda expression such as in the
lambda form in the above table or as an argument to FUNCTION below.

Below is an example of LAMBDA evaluated as a macro:

#+begin_src lisp

  ;; Macro call
  
  (funcall (lambda (x)
	     (+ x 100))
	   1)

#+end_src

The LAMBDA macro expands its arguments to (function (lambda â€¦)). The
above expression is expanded to:

#+begin_src lisp

  ;; Returns 101
  
  (funcall (function (lambda (x)
	     (+ x 100)))
	   1)

#+end_src
 
We can supply lambda expressions as arguments to FUNCTION. Thus, in
the above, LAMBDA refers to the symbol LAMBDA. The FUNCALL function
above will evaluate the lambda form and returns 101.
